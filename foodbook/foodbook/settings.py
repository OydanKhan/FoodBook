"""
Django settings for foodbook project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9#a$403lr^penwv)b4pbrmdia6hb^^(z^3*qlbo_66xzk_f+4k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False


ALLOWED_HOSTS = [
    '.localhost',
    '127.0.0.1',
    '[::1]',
    'ec2-35-169-21-246.compute-1.amazonaws.com'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'accounts',
    'foodbook_app',
    'rest_framework_api_key',
    # Django for lockout
    'axes',
    # Django Allauth apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',  # Enable Google provider
    # 'allauth.socialaccount.providers.facebook',
    # 'allauth.socialaccount.providers.github',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'axes.middleware.AxesMiddleware',
    'allauth.account.middleware.AccountMiddleware'
]

ROOT_URLCONF = 'foodbook.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'foodbook_app.context_processors.session_expiry_time',
            ],
        },
    },
]

WSGI_APPLICATION = 'foodbook.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# settings.py
AUTH_USER_MODEL = 'foodbook_app.User'


# For Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,  # Set the minimum length
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default Django auth backend
    'axes.backends.AxesStandaloneBackend',
    # 'allauth.account.auth_backends.AuthenticationBackend'  # Django Allauth backend
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Australia/Sydney'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_ROOT = "/home/ubuntu/Lab_03_Group_03/foodbook/static/"
STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT =  os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

# FOR TIMEOUT
# Session expires after 30 minutes of inactivity
SESSION_COOKIE_AGE = 1800  
# Ensure the session is cleared when the browser is closed
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
# Update session expiry on each request
SESSION_SAVE_EVERY_REQUEST = True

# FOR LOCKOUT
# Axes Configuration
AXES_FAILURE_LIMIT = 3
AXES_COOLOFF_TIME = 1  # in hours
AXES_FAILURE_LIMIT_PER_USER = True  # Use this instead of AXES_ONLY_USER_FAILURES
AXES_CLIENT_STRATEGY = 'all'  # Use this instead of AXES_USE_USER_AGENT

# Optional: Customize lockout template or redirect URL
AXES_LOCKOUT_TEMPLATE = 'lockout.html'
AXES_LOCKOUT_URL = '/locked-out/'


# For Google OAuth 2.0
SITE_ID = 1
LOGIN_REDIRECT_URL = '/'  # Redirect after successful login
LOGOUT_REDIRECT_URL = '/'  # Redirect after successful logout

ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "none"

# For CSRF protection
CSRF_COOKIE_SAMESITE = 'Lax'

CSRF_COOKIE_SECURE = True # csrf cookie will only be sent over HTTPS connections
SESSION_COOKIE_SECURE = True # session cookie will only be sent over HTTPS connections

# JS cannot acess session or csrf cookies, protection against XSS attacks
SESSION_COOKIE_HTTPONLY = True 
CSRF_COOKIE_HTTPONLY = True
